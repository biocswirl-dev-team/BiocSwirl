- Class: meta
  Course: ChIP
  Lesson: Annotating Peaks
  Author: Matthew Moss
  Type: Standard
  Organization: Donald And Barbara Zucker School of Medicine at Hofstra/Northwell
  Version: 2.4.5


#Annotate Peaks

- Class: text
  Output: We're now going to determine what type of regulatory elements your ChIP is binding to. In order to do this, we will be using the "annotatePeak" function from the ChIPseeker package. By now I'm sure you're an expert in how to get this set up, but let me walk you through it one last time anyway


- Class: cmd_question
  Output: Install ChIPseeker
  CorrectAnswer: BiocManager::install('ChIPseeker')
  AnswerTests: omnitest(BiocManager::install('ChIPseeker'))
  Hint: Use BiocManager::install() to get the job done!

- Class: cmd_question
  Output: After installation, make sure to load your package using the "library" function. 
  CorrectAnswer: library("ChIPseeker")
  AnswerTests: omnitest(library("ChIPseeker"))
  Hint: The format should be "library(__"packageName"__)

- Class: cmd_question
  Output: Also, you should load in the peaks file from the peak calling lesson. Load it in as a variable called "peaks". Remember that it has column names (a header), and is delimited with a tab ("\t")
  CorrectAnswer: peaks <- read.table("", header=TRUE,sep='\t')
  AnswerTests: omnitest(peaks <- read.table("", header=TRUE,sep='\t'))
  Hint: Take a look at ?read.table to see how to load in this file, and what options you would use to get it formatted properly!



- Class: cmd_question
  Output: And now annotate your peak variable using the annotatePeak function. Save this to a variable named annot
  CorrectAnswer: annot <- annotatePeak(peak)
  AnswerTests: omnitest(annot <- annotatePeak(peak))
  Hint: Use ChIPseeker::annotatePeak to see the help documentation!


- Class: cmd_question
  Output: And to conclude today's lesson, let's generate a plotted result. We'll make a pie chart of the regulatory regions your peaks are found in, using the plotAnnoPie function. All you have to do is run that function on your annot variable!
  CorrectAnswer: plotAnnoPie(annot)
  AnswerTests: omnitest(plotAnnoPie(annot))
  Hint: Use ChIPseeker::plotAnnoPie to see the help documentation!

- Class: text
  Output: And that's all for this lesson! You've learned a lot by now and should feel a sense of accomplishment. In future lessons, we'll discuss how to functionally annotate your regions using gene ontology, and how to compare them to other treatment conditions. Thanks for completing this lesson!


